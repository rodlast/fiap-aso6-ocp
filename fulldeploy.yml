kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: sample-database2
  namespace: fiapaso6-rodrigo
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/fiapaso6-rodrigo/deploymentconfigs/sample-database2
  uid: f838dedc-5a6d-42c8-a9d0-3154782914f1
  resourceVersion: '12395792'
  generation: 2
  creationTimestamp: '2021-12-16T00:19:18Z'
  labels:
    app: sample-database2
    app.kubernetes.io/component: sample-database2
    app.kubernetes.io/instance: sample-database2
    template: postgresql-persistent-template
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.alpha.openshift.io/wait-for-ready: 'true'
  managedFields:
    - manager: oc
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2021-12-16T00:19:18Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/generated-by': {}
            'f:template.alpha.openshift.io/wait-for-ready': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:template': {}
        'f:spec':
          'f:replicas': {}
          'f:selector':
            .: {}
            'f:name': {}
          'f:strategy':
            'f:activeDeadlineSeconds': {}
            'f:recreateParams':
              .: {}
              'f:timeoutSeconds': {}
            'f:type': {}
          'f:template':
            .: {}
            'f:metadata':
              .: {}
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:creationTimestamp': {}
              'f:labels':
                .: {}
                'f:name': {}
            'f:spec':
              .: {}
              'f:containers':
                .: {}
                'k:{"name":"postgresql"}':
                  .: {}
                  'f:env':
                    .: {}
                    'k:{"name":"POSTGRESQL_DATABASE"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef':
                          .: {}
                          'f:key': {}
                          'f:name': {}
                    'k:{"name":"POSTGRESQL_PASSWORD"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef':
                          .: {}
                          'f:key': {}
                          'f:name': {}
                    'k:{"name":"POSTGRESQL_USER"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef':
                          .: {}
                          'f:key': {}
                          'f:name': {}
                  'f:imagePullPolicy': {}
                  'f:livenessProbe':
                    .: {}
                    'f:exec':
                      .: {}
                      'f:command': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":5432,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:readinessProbe':
                    .: {}
                    'f:exec':
                      .: {}
                      'f:command': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:memory': {}
                  'f:securityContext':
                    .: {}
                    'f:capabilities': {}
                    'f:privileged': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/var/lib/pgsql/data"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"sample-database2-data"}':
                  .: {}
                  'f:name': {}
                  'f:persistentVolumeClaim':
                    .: {}
                    'f:claimName': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2021-12-16T00:19:54Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"postgresql"}':
                  'f:image': {}
          'f:triggers': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:details':
            .: {}
            'f:causes': {}
            'f:message': {}
          'f:latestVersion': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:unavailableReplicas': {}
          'f:updatedReplicas': {}
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:e8fc39b8d1fbdc230a3f04486dafcb7d7736d1f6bd51b0906bb924953e53c550
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: sample-database2
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: sample-database2
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      volumes:
        - name: sample-database2-data
          persistentVolumeClaim:
            claimName: sample-database2
      containers:
        - name: postgresql
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:e8fc39b8d1fbdc230a3f04486dafcb7d7736d1f6bd51b0906bb924953e53c550
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: sample-database2
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sample-database2
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: sample-database2
                  key: database-name
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
            - name: sample-database2-data
              mountPath: /var/lib/pgsql/data
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities: {}
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  latestVersion: 1
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  availableReplicas: 1
  unavailableReplicas: 0
  details:
    message: config change
    causes:
      - type: ConfigChange
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2021-12-16T00:19:53Z'
      lastTransitionTime: '2021-12-16T00:19:53Z'
      message: Deployment config has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2021-12-16T00:19:54Z'
      lastTransitionTime: '2021-12-16T00:19:54Z'
      reason: NewReplicationControllerAvailable
      message: replication controller "sample-database2-1" successfully rolled out
  readyReplicas: 1
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"blog-django-py:latest","namespace":"fiapaso6-rodrigo"},"fieldPath":"spec.template.spec.containers[?(@.name==\"blog-django-py\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  selfLink: /apis/apps/v1/namespaces/fiapaso6-rodrigo/deployments/blog-django-py3
  resourceVersion: '12330523'
  name: blog-django-py3
  uid: cda1ed70-2cc8-4f75-80e9-09773b0ab365
  creationTimestamp: '2021-12-15T23:04:33Z'
  generation: 2
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2021-12-15T23:04:33Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector':
            'f:matchLabels':
              .: {}
              'f:app': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
                'f:deploymentconfig': {}
            'f:spec':
              'f:containers':
                'k:{"name":"blog-django-py3"}':
                  .: {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2021-12-15T23:05:48Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"blog-django-py3"}':
                  'f:image': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2021-12-15T23:05:56Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
  namespace: fiapaso6-rodrigo
  labels:
    app: blog-django-py3
    app.kubernetes.io/component: blog-django-py3
    app.kubernetes.io/instance: blog-django-py3
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app3
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-django-py3
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blog-django-py3
        deploymentconfig: blog-django-py3
    spec:
      containers:
        - name: blog-django-py3
          image: >-
            image-registry.openshift-image-registry.svc:5000/fiapaso6-rodrigo/blog-django-py2@sha256:9cd5f0844373e9632fafbdd1cabe54a61a84a023a4fa7531bc48626c422d3b55
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: 'postgresql://sampledb:sampledb@sample-database2:5432/sampledb2'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2021-12-15T23:05:56Z'
      lastTransitionTime: '2021-12-15T23:05:56Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2021-12-15T23:05:56Z'
      lastTransitionTime: '2021-12-15T23:04:33Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "blog-django-py3-7469f96f6d" has successfully progressed.
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: criado-via-yaml
  namespace: fiapaso6-rodrigo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blog-django-py3
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 50
          type: Utilization